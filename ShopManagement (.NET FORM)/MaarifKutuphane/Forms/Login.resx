<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoLbl.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAE+NJREFUeF7tnXmQXEUdx9Ucuwm5CKEqAoJaWCgiYoFQoNxQFEIBgijIoeIBlopH
        4VGWYBWlgpYgh4ACimBQkRKpnZmdzU0y1x45dpNNSCABCqE4cpBwszsz6/e36bf1tt/3vfm9mTc7M8z8
        8alsfq/71z39+3W/X/fr1+89IyMjLZoYKmzRPFBhi+aBCls0D1TYonmgwhbNAxW2aB6osEXzQIUtmgcq
        bNE8UGGL5oEKWzQPVNiieaDCFs0DFbZoHqiw0ZibzJ303o7UG+D1vZO5c1maKDhgce+XUcbQ+zpSLx6+
        fM0xLE2jQYWNhBgfBnkZhhkR8Peufbu6T2ZpK+GQpauOh/63nXImxVIbDlu++liWtpGgwkZhdmf2RBhj
        h2MUFzujdIKDl/adDMd61S5ncizV3ehOQIWNgDH+LtsoLiJxggMW9ZwLXW9ausfASLC5kZ2ACusdhfEd
        tu/blSvbCfZf1HMWdIwN+37ACbY0qhNQYT0zI5ER479uGyGAnfO6uk9nuoLA6HEe8pY0voOMBI0YGFJh
        vWKMPxbwheA1CRaZTsb8hT2fQx618R3gBJsazQmosB4xxmcBn5YdmpgA9/xTkfY1K68aBIarG+l2QIX1
        CBp3u93YZbBzbjLrOxLM68qdjTRlG99BRoJGcQIqrCci6PnjkDUDdjuQ0QHXfaP9sEzqSG1phNsBFdYL
        xviaaF8MmwSL2TXCLrcT4G+J9lWBJYb45SjneXbNphECQyqsB4zxd9qNyoBBcpJekL9ZGsIr4gQC/lb1
        fBg0d9Di3tMElLObpbFBnifr2QmosNYY479iNybDMb47L2S9LK0N0j0PXmDXbGDIZRIgOuWEdIK6nR1Q
        YS1pj2dOQKO9ZDciAwZY7Da+g3GClSxPOeB+vuj9C3tOscsxTqByVDjBhnp0AiqsFcb4qmgfDd/HjO9g
        nKCH5Q0DdHQHTR+NE6jqDCd46lMr1nya6akVVFgLpsTSV6CRVIEYGvyRIOM7VOoEyLtKs3ZgnOB/TIcN
        RpPnmI5aQYW1AA14PWswhsb4DsYJ1jI9QYjx2XTRD4xetzI9hALLXyuosBa0x9MnoNHvJg3GeGdyLH0V
        08MwTtBH9FCQdrU8cGK6bCQwnBpP38n0MGZ1Zn/F9NQKKqwVEgOg8W9hDUco4rZxKdPDME6wmugZB9Kk
        tcaXwBDG/xPTQyhiRPkR01NLqLCWhHSCYTjBxUwPQ5wAeTwbOxxQ7sthbi8o+y9MD6Ewryv3baaj1lBh
        tTHR/hCQXnwFuw5j/NrVgEEUp8bS59s6/EB633k/ytzM8thIYIhb0D+YDsacZO47tg55VjAtnvm7XMfs
        YMuRK9YeZaeZCKiwmhjju5d3xQm+ydLBIDe50gUhI4HHkRhI6/tcAeU9zfLYoKw/svyE/IzO7E+YjmmJ
        zD3utJNjqcFaOAEVVgtjfPY8v4BG/QrLE8IJREdJJ0C6IAfYyvK4mRJLaY0/slci82OmY2Yi+1uWHk6w
        7uiVa49geaoFFVYDY/zAp3rMgGYk0E4Rixiar7Z1uEGaIAfYwvIIEhhC9+9ZPkKBGV82l6LnBwaNKGPt
        san+T9p5qwUVRo0x/jb7xzJwP7+Q6YBxbmPpCYGBIa77rtoFOQB6580sDyEPI/+U6YBT3EjSe8Aos3qi
        nIAKo8QY3zfyJtCh3IwEqgYEosMTVwi45vucgTmAzArQK7WLPEWk96xPyEohAj6tA4+C+g8cl+7/hK0r
        aqgwKozxVY90LQoBI4F2dkBX3CAP5QCTOlLqqR56vifaP2hxz2lT4+kHSfqSwAnWfDY98HFbZ5RQYRQY
        41eyjSvfHk/TdXgY6nckPcPjBJCFcgDIC3Y6QhE9/Id2XlklbIuntWsaFNx6Np5YRSegwkqJwPgOQxh+
        Pb3K3A40s4MOOy9kQY+aPQ6Ach4l6dxQ48sqIXrwXSR9aBATrD85s+6jdhlRQIWVYIyvekauBQ3pWfI1
        TnAHSy/g2r2Sxs6Ha6EcQGIA3AYWkLRCET38B3YeAXX2rVs5oCM8fmp2feROQIXlYoyvCvikZ4Ff4G/V
        EIsGpUEddHiCK8huZMYXcD2UAwjGCW630soK5HfttLJKCLl27WJoRmf2RtRXtSsJbbAhaiegwnIwxldt
        kcIPHnQMxAzowxBzAtEDHWOBIf6+y07jBmlCO4BgnOCfTloEdh7jy+Nj9FTtsF+cYx4OHbps1XGot2qa
        jJhg0+m59YfYZZcLFYbFGF8b7WfcvdMYUNtoMr3zzPGNjrvB/bh+vH3dDXSU5QCCOAHK6IQj3Ghfk4Wi
        SbGU9rFwfk4yO27BSp4NQLfq1onfuPGM3OBH3PnLhQrDII2CSmm3bve4je9gDHgvy0MYRi9T7wWwQf4g
        Byi5FMyQNkCdtKuEIzM7szRuME6gejEFt5n1Z3YPHsz0hIEKtRjjawO+FZKe6XHAj1ePBH7rBKVA3qD7
        beAIwNhj/JR6oWh6IvMzpsdBNo6iHVQdamos1X9W9+CHmB4tVKgFlVDtp8cPort3GUir3hCCtJ6huBTI
        94ylZwzoW8fyBIE8DzFdhAICvu8zHTaycRR6VTEBpoihndYNFWpBBYbtCjFwz3xA6wBhYoKwDoCeeg7T
        46KAul7C8vqBOiwkemyG8PvpLIYhDoB44gmixwPqu53p0EKFWiQqRyVkYwetnBtpKK0TCEgfODvA9ZtK
        BXxu0FAXIZ9myplH2q8xHX6gLsuJHoci7vn0UTfj8OWrjpkUS28lejyg3DcrjQOoMAzT4hk5SOEdu3IM
        VPjhkCMBffgD+TUsjx/G+KrRylBED7yc6WLIb0Kd2Iso+bZ4+nqWhyFBIMr1vUW5wW/admp2/aFMTxio
        MCwIbM5Epd6yK8lAQ8VDjgTjdgrL/2UHMUvLkN6MfKpRyqKAW8bnmU6GcYKl7vxoF/VIcsjSvuNh/Kdc
        +X1BObujWhCiwnKQBkDltLeDh8pwgjz+vZ9NI/2A8a+SfO6yQ5KHUdQxgXECeS8xz54P+CFH0E3qSG+2
        yqbgN70c5WogFZaLGQm0t4OOME4QFjTU5SinEuM7yLrDGayMKJBdQnCyTaRcD2iz3VE/GaTCSjAxgSbY
        kh/UWQ0nkKEb+lV1UDIEI13EyqqEDy/pk0MunyXleYBDv1SNx8JUWCkYpi9ApbVTxAVROoHp+aqy0fjX
        zLJ25waQL3fxiWGMr432X63W7iAqjAI4wRdReW1MsDQKJzA9v2jrZ8xMZO9wppFwAnfwFkShLZY+yy43
        LOZlUlW0j3SvVHN/IBVGxfT4aEygjcCfwY/dALaEAfnkX1k0WQc0xi/ulcjc7K6nOMLMRKbka2OGYZS3
        DjwNtkodApDrDk+CTWAz0D47eePolf1V3SZOhVFiAsNypmFVYXo8fQOrp3EC9Quk1QbG3zYRL4pQYdQY
        J4gyKCsL97DPqBcngPF3T9RbQlRYDeQejx8X+vTNqEBweHWQ8R0kzezO7CNMx0SAej43kUfJUGE1MA6g
        WiOoBm3x9C9ZvWzEAWYlsvcxHRMBHOCJd50DTEtkLsOPC7MWXxVg2HsUtwAJJmn+iQK3gB3vmluAbJXC
        j4piRS4SZnVm7mP1NMavpyBwV8MHgTM7sxfix2jXAp4Fg8CeSj1BYGmk56pGGXskCGn8AsrqA1JXmQq6
        6yFTPcE99XNPBTdjiO/Hv9qd07sbdhpojK/q+fihiSgWgtC4l0CfaraBkWl0JNhj/Kza+EivPpbGD1kF
        nBRLPU70e0Db7Kjm62FUWClzkrnzUXlVz4fRHo14KVieAKqcAE5626xE5l/sGkGMr97YUYpRJ8CIQMrx
        gHRVeQ4gUGEloFEvRaW1a/FJiRGYnkpAg30D+qNcd8jD+KoTSMJgngTKaiYrcxz4TTtOzQ7U95tBc5LZ
        i1FZ7UOgWDWM7wCDyXa1KJxgaGosXbVvEY7uBYil1pNyPaDNZBdQfb4ZZHq+6p6PH7wkzCGMGClk5+1b
        aIBb2HU/IhgJ5G0kdc8Xh0ZdB5DvrbZ4RrXuIOzZCpZWxQT4TTujeilEoMKwzOvKfQGVUzU0jB8LY3x7
        zz3y387S+dGG3ot85TyLCPXkT4wP4zzmzo/YRr0TWJxgcky9K2h7pe8DOFBhGOZ1dYvxtT2/S3P2rjDa
        oHsOZPI84YNT0CNY/MAQLkGp6jGxQc4aUr99ZOq6iOgpYGT8FsvDkHk/9Kj2CMAJtp3Ts+GDTE8YqFDL
        7GTuSlRGa/xl4YwffBQb9N0ZZvYgETzyaZxAAj51tG96fozocRjeO5lVbw4VJ4CDawPDXef1bjiI6dFC
        hVpQCVWvQoMuYOft+wHj/pnpsUEDjHuuXwrUQ4LUoFtV6FfOcM/XfJegOH9ht/pEU9kAghFItU9QbgdM
        hxYq1IIfr3qRET+mU+MA5vVqlfEFGDTwPTsG8vm+xYzfs5blCQK9dfS0TwV5jASqV8PEAVAX1aaRtlj4
        19ncUKEWs69N+4GHx4OcQG4P6Pn/YXkJw1Pj6bLO3kVe328SoI6DLE8Q4rRwRDkNRDMaFnDLCIxfjl05
        anz5FD7LP472eKrv/N6NBzI9WqgwDMYJgl65HgPD1Wo/J8DQqz74aVpc/8KFDfIHOYDqqFgG6q8+0RSB
        M309XNb9UQfVc4L2WLq30vu/QIVhMU6g+3ZORyrj/viSOASGfe3ZAPnpicyX3GULEgxC7wLw71KBIXQE
        nRYe+KatifZT6PG32dfkd7TH079hegnF/Rblxq0vSPCnbUNMT9dGYXyBCsvBOIEqJoChehwnmBJPP8DS
        EOg5fMYoY1u78feDQU6ANL51DHIAKQeO+lcnLYz9c5YuxPcD8vMX9oweM2OMr+r5GGk2RjH9c6DCcoET
        qD+lhsZ8pC2eVp/86Wd86PEc4SqzCD8nwPXQDrAnOE15joefmfC+9StbvqfHMzfYaX3Iz+vKXYcO8SK5
        5gE9f02UxheosBLkAYfWm5UUZiSynhU1YxTfcwRkJBAHsfPhWigHkHKg678sPZBzgelIMC2eDnU0bCmg
        b8XZPdGs/rmhwkoxTqA6+qwEQ2hgz+nf5oMNJQ+RQB2Sdl7IQzkAeucSltaFvGdQ1sngWtDze6Ja+rWh
        wigwTlDOOcEOw3OT2QuY7hAR97CdF7IgB/AcEgW5aqUTo5TnwxDypA9Bq/qDUgwYv7daxheoMCqkAdCo
        qm8BWkiv8nxgSSJtGF87tHqML0AeygEw0mg/DZPHLcczWskZgPgtZTkBfuv6ahpfoMIoMU7g2+iE/Exy
        jJr5PJs6woYOup6Pa6EcYNTpwn0ZzHOApGzzRlCq/tKIID0/imPgSkGFURPCCQqzOrPfs/ObI9e1RpAZ
        g+9XQ4LqwRzAATMW7Qcjhmcls57AUKZ6GAlU6x0TZXyBCquBOQ6VfS/IIT87maOGi6LnO5TrAEJ7PKN1
        ghFM7zyj2JEr1hw1qzMXeDtAtL9soowvUGG1ME7AVrvy8xd2X8byoNHVhzDiHvxVpsNNJQ4gTE+MLlmr
        noLO7cpdy3TMSfKvh7TH0tkozwHWQIXVxDiB2wjFvZM5+pRsejyjfT4wMjuZvZLpsEFa38MtUa/HWR4b
        3GK0gWgRsYvnoZVs84azjpvGTo2lBqLc6qWFCqvNx5atOgU/Wt4TLOzT1e0JmgT0fO1jYTmHjz5cYcDI
        vl8Nw5y/n+VhtMf1Xw3df2GPp36yzRuB4cO4LruPtk50z3egwlozTf+BpcI+yZz6yaA5mSPoaeCr8kyD
        5WVgjm9/Q8CP4v4Lu0OdbThRUGGtkNtDiNWzYfR89d5AMeyk2OjrY0zXGEizVhaxmA7GzM7MH5geQn6/
        Rd3XMR21hAprgeyKRc//G2k4xhB6vnrHrTH+INFDQdqBME4QZo6/T1fuVqajVlBhLZjbmb2WNRjjA4t7
        PXsC/BBDwqDa83/GQJ6NMiIxnYwZiax6sYjlrxVUWAsOXNTzddyDVVuhpsTSSzTGEeNPjo2e3En1lALl
        PCYjE9PtZnQ7d0fqeabDBvV5humoFVRYK8zGCO1+gv4g44iDoBdvYHnDACdIyfHtrAwh5GaONbWK9v2g
        wloiq2VoUNWOWPSmPuYE5i2bfpanHOAE3cwJzB4+7Tau3lrM80tBhbXG9CrVbmMYJ+M+U+ew5avkyHX1
        u/cYulVHtaKcrNTLKcds3VZ9MWUabiX1aHyBCusB07tUu43FONJDBfR81Rk/0L3LyYO/VbcdlDP6aXdj
        fPWwX6/GF6iwXjBOoNpUgoZeIY7ArtlA52vu3mxGHG0A2otRQ+WY8jy/no0vUGE9YXqbqsE1iKHdxnc4
        YsWaz+BaOZtXKHCUzRP5VK9cqLDekJOyYZyKN5pCx24xNCtDMM6m/QyeL+j5A9XeyRMVVFiPHJdeK05Q
        tnGkd8trV0y3G3lSh7SqWQijLZZa1SjGF6iwXpEnaDBO6JEAebaHOW//xHR/WeVMj6WXN5LxBSqsZ8I6
        gaQt55g1OZAJeVWBoYB5/upzegYjfWljIqDCeufkzDoxTslhGmlekbRMh4aTMuvE2UrO9RHwbY36jZ2J
        ggobAdNDfUcCXHs9ihO1ZBoHXb4jAYz/RFQvatYCKmwkMCf37PCBwXZHeZya3Neh07OXcGostaGRjS9Q
        YSNxRm5AeujY7EB6azUeuMgQD91jI86UWGpToxtfoMJGQxZcYJx3wJvVXnlDGW9PjqVeeDcYX6DCFs0D
        FbZoHqiwRfNAhS2aByps0TxQYYvmgQpbNA9U2KJ5oMIWzQMVtmgeqLBF80CFLZoHKmzRPFBhi+aBCls0
        CyPv+T/wQIIBODQj4QAAAABJRU5ErkJggg==
</value>
  </data>
</root>